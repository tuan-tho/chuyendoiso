# app/schemas.py
from pydantic import BaseModel, ConfigDict # type: ignore
from typing import Optional
from datetime import datetime, date

# -------- Users --------
class UserCreate(BaseModel):
    username: str
    password: str
    full_name: Optional[str] = None
    role: Optional[str] = "student"
    model_config = ConfigDict(extra="ignore")


class UserOut(BaseModel):
    id: int
    username: str
    full_name: Optional[str]
    role: str
    model_config = ConfigDict(from_attributes=True)


# D√πng cho l·ªìng trong ReportOut (ƒë·ªß ƒë·ªÉ hi·ªÉn th·ªã ng∆∞·ªùi g·ª≠i)
class UserShort(BaseModel):
    id: int
    username: str
    model_config = ConfigDict(from_attributes=True)


# -------- Auth --------
class Token(BaseModel):
    access_token: str
    token_type: str = "bearer"


# -------- Reports --------
class ReportCreate(BaseModel):
    """
    D√πng cho t·∫°o b√°o c√°o t·ª´ ph√≠a SV.
    - 'title' l√† b·∫Øt bu·ªôc.
    - description/category/priority optional -> backend c√≥ th·ªÉ t·ª± suy lu·∫≠n.
    - image_url: link ·∫£nh ƒë√£ upload (n·∫øu c√≥).
    - C√°c tr∆∞·ªùng AI l√† optional (backend s·∫Ω t·ª± g√°n).
    - building/room th√™m ƒë·ªÉ l∆∞u v·ªã tr√≠ n·∫øu ng∆∞·ªùi d√πng nh·∫≠p.
    """
    title: str
    description: Optional[str] = None
    category: Optional[str] = None            # backend c√≥ th·ªÉ t·ª± map t·ª´ AI
    priority: Optional[str] = None            # normal/high/urgent (n·∫øu c√≥)
    building: Optional[str] = None            # ‚úÖ kh·ªõp models.Report
    room: Optional[str] = None                # ‚úÖ kh·ªõp models.Report
    image_url: Optional[str] = None           # ‚úÖ kh·ªõp models.Report

    # ---- Enrichment t·ª´ AI (server s·∫Ω t·ª± g√°n) ----
    ai_label: Optional[str] = None            # ƒëi·ªán | n∆∞·ªõc | internet | thi·∫øt b·ªã | v·ªá sinh | kh√°c
    ai_confidence: Optional[float] = None     # 0..1
    ai_room: Optional[str] = None             # "214", "B203", ...
    ai_floor: Optional[int] = None            # 1..15
    ai_time_text: Optional[str] = None        # "t·ªëi qua", "2 ng√†y tr∆∞·ªõc", ...

    model_config = ConfigDict(extra="ignore")


class ReportUpdate(BaseModel):
    """
    D√πng cho admin c·∫≠p nh·∫≠t tr·∫°ng th√°i/ghi ch√∫.
    C√≥ th·ªÉ m·ªü r·ªông cho ph√©p c·∫≠p nh·∫≠t priority, image_url n·∫øu c·∫ßn.
    """
    status: Optional[str] = None              # open | in_progress | resolved
    admin_reply: Optional[str] = None
    priority: Optional[str] = None            # (tu·ª≥ ch·ªçn) cho ph√©p admin ch·ªânh m·ª©c ƒë·ªô
    building: Optional[str] = None            # (tu·ª≥ ch·ªçn) n·∫øu mu·ªën s·ª≠a
    room: Optional[str] = None
    image_url: Optional[str] = None
    model_config = ConfigDict(extra="ignore")


class ReportOut(BaseModel):
    id: int
    title: str
    description: Optional[str]
    category: Optional[str]
    priority: Optional[str]
    status: str
    admin_reply: Optional[str]

    # ‚úÖ B·ªï sung cho kh·ªõp models.Report
    building: Optional[str]
    room: Optional[str]
    image_url: Optional[str]

    created_at: datetime
    updated_at: datetime
    reporter_id: int

    # üëá Tr·∫£ k√®m user r√∫t g·ªçn ƒë·ªÉ FE hi·ªÉn th·ªã ng∆∞·ªùi g·ª≠i
    reporter: Optional[UserShort] = None

    # ---- Tr∆∞·ªùng AI tr·∫£ v·ªÅ cho client xem ----
    ai_label: Optional[str] = None
    ai_confidence: Optional[float] = None
    ai_room: Optional[str] = None
    ai_floor: Optional[int] = None
    ai_time_text: Optional[str] = None

    model_config = ConfigDict(from_attributes=True)


# -------- Checkins --------
class CheckinCreate(BaseModel):
    type: str                                 # checkin | checkout
    date: str                                 # YYYY-MM-DD
    time: Optional[str] = None                # HH:MM
    note: Optional[str] = None
    model_config = ConfigDict(extra="ignore")


class CheckinUpdate(BaseModel):
    status: Optional[str] = None              # pending | approved | rejected
    admin_reply: Optional[str] = None
    model_config = ConfigDict(extra="ignore")


class CheckinOut(BaseModel):
    id: int
    type: str
    date: str
    time: Optional[str]
    note: Optional[str]
    status: str
    admin_reply: Optional[str]
    created_at: datetime
    updated_at: datetime
    student_id: int
    model_config = ConfigDict(from_attributes=True)


# -------- Student Profile --------
class StudentProfileBase(BaseModel):
    student_code: Optional[str] = None
    faculty: Optional[str] = None
    major: Optional[str] = None
    address: Optional[str] = None
    dob: Optional[date] = None
    gender: Optional[str] = None
    phone: Optional[str] = None
    email: Optional[str] = None
    hometown: Optional[str] = None
    guardian_name: Optional[str] = None
    guardian_phone: Optional[str] = None
    building: Optional[str] = None
    room: Optional[str] = None
    bed: Optional[str] = None
    checkin_date: Optional[date] = None
    model_config = ConfigDict(extra="ignore")


class StudentProfileUpdate(StudentProfileBase):
    # Cho ph√©p c·∫≠p nh·∫≠t full_name (n·∫±m ·ªü b·∫£ng users) n·∫øu backend c·ªßa b·∫°n handle:
    full_name: Optional[str] = None
    model_config = ConfigDict(extra="ignore")


class StudentProfileOut(BaseModel):
    id: int
    user_id: int
    full_name: Optional[str]   # n·∫øu backend g·ªôp t·ª´ b·∫£ng users, ƒë·ªÉ None n·∫øu kh√¥ng map
    student_code: Optional[str] = None
    faculty: Optional[str] = None
    major: Optional[str] = None
    address: Optional[str] = None
    dob: Optional[date] = None
    gender: Optional[str] = None
    phone: Optional[str] = None
    email: Optional[str] = None
    hometown: Optional[str] = None
    guardian_name: Optional[str] = None
    guardian_phone: Optional[str] = None
    building: Optional[str] = None
    room: Optional[str] = None
    bed: Optional[str] = None
    checkin_date: Optional[date] = None

    model_config = ConfigDict(from_attributes=True)


# -------- Password Change --------
class ChangePasswordIn(BaseModel):
    old_password: str
    new_password: str
    model_config = ConfigDict(extra="ignore")


class ChangePasswordOut(BaseModel):
    message: str
